buildarch=4

_rcver=3.19.0
_rcrel=4
_rcnrel=armv7-x2

pkgbase=linux-armv7-rc
_srcname=linux-3.$((${_rcver##*.}-1))
_kernelname=${pkgbase#linux}
_desc="ARMv7 multi-platform"
pkgver=${_rcver}.rc${_rcrel}
pkgrel=1
arch=('armv7h')
url="http://www.kernel.org/"
license=('GPL2')
makedepends=()
options=('!strip')
source=("${_rcver}-rc${_rcrel}-${_rcnrel}.zImage"
        "${_rcver}-rc${_rcrel}-${_rcnrel}-dtbs.tar.gz"
        "${_rcver}-rc${_rcrel}-${_rcnrel}-firmware.tar.gz"
        "${_rcver}-rc${_rcrel}-${_rcnrel}-modules.tar.gz"
        "config-${_rcver}-rc${_rcrel}-${_rcnrel}")
noextract=("${_rcver}-rc${_rcrel}-${_rcnrel}-dtbs.tar.gz"
           "${_rcver}-rc${_rcrel}-${_rcnrel}-firmware.tar.gz"
           "${_rcver}-rc${_rcrel}-${_rcnrel}-modules.tar.gz")
md5sums=('8b5540eb7ff60732c3d47d8da5d10359'
         '0042803042be04d884bace01ca17f07c'
         'cfc2caa8f15299170fb7b8824c2786e5'
         'a2f0f0500ecf1e5a6c84e4fce3e2b2aa'
         '622189d12d05d2c6ccba4b1bc4519ccf')

_package() {
  pkgdesc="The Linux Kernel and modules - ${_desc}"
  depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
  optdepends=('crda: to set the correct wireless channels of your country')
  provides=('kernel26' "linux=${pkgver}" 'aufs_friendly')
  conflicts=('linux')
  replaces=('linux-mvebu')
  install=${pkgname}.install

  cd "${srcdir}"

  KARCH=arm

  # get kernel version
  _kernver="${_rcver}-rc${_rcrel}-${_rcnrel}"
  _basekernel=${_kernver%%-*}
  _basekernel=${_basekernel%.*}

  mkdir -p "${pkgdir}"/{lib/modules,lib/firmware,boot/dtbs}
  tar -xf "${_rcver}-rc${_rcrel}-${_rcnrel}-modules.tar.gz" -C "${pkgdir}"
  tar -xf "${_rcver}-rc${_rcrel}-${_rcnrel}-firmware.tar.gz" -C "${pkgdir}"/lib/firmware
  tar -xf "${_rcver}-rc${_rcrel}-${_rcnrel}-dtbs.tar.gz" -C "${pkgdir}"/boot/dtbs
  cp "${_rcver}-rc${_rcrel}-${_rcnrel}.zImage" "${pkgdir}"/boot/zImage
  
  chown -R root:root "${pkgdir}"
  chmod -R g-w "${pkgdir}"
  

  # set correct depmod command for install
  sed \
    -e  "s/KERNEL_NAME=.*/KERNEL_NAME=${_kernelname}/g" \
    -e  "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" \
    -i "${startdir}/${pkgname}.install"

  # remove build and source links
  rm -f "${pkgdir}"/lib/modules/${_kernver}/{source,build}
  # remove the firmware
  rm -rf "${pkgdir}/lib/firmware"
  # gzip -9 all modules to save 100MB of space
  find "${pkgdir}" -name '*.ko' |xargs -P 2 -n 1 gzip -9
  # make room for external modules
  ln -s "../extramodules-${_basekernel}-${_kernelname:-ARCH}" "${pkgdir}/lib/modules/${_kernver}/extramodules"
  # add real version for building modules and running depmod from post_install/upgrade
  mkdir -p "${pkgdir}/lib/modules/extramodules-${_basekernel}-${_kernelname:-ARCH}"
  echo "${_kernver}" > "${pkgdir}/lib/modules/extramodules-${_basekernel}-${_kernelname:-ARCH}/version"

  # Now we call depmod...
  #depmod -b "$pkgdir" -F System.map "$_kernver"

  # move module tree /lib -> /usr/lib
  mkdir -p "${pkgdir}/usr"
  mv "$pkgdir/lib" "$pkgdir/usr"
}

pkgname=("${pkgbase}")
for _p in ${pkgname[@]}; do
  eval "package_${_p}() {
    _package${_p#${pkgbase}}
  }"
done
